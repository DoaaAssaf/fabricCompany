swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
securityDefinitions:
  AdminAuth:
    type: basic
  UserAuth:
    type: basic  
  SupplierAuth:
    type: basic
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user:
    x-swagger-router-controller: users
    get:
      description: get the users' list
      parameters:
        - in: query
          name: top10
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
    post:
      description: add a new user to the list
      parameters:
        - name: user
          description:  user information
          in: body
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetuserResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: []
  /user/{id}:
    x-swagger-router-controller: user
    get:
      description: get infromation about one user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetuserResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    put:
      description: update an existing user
      # define the parameters
      parameters:
        - name: id
          description: user id
          type: string
          in: path
          required: true
        - name: user
          description: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetuserResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
            
    delete:
      description: delete a user
      # define the parameters
      parameters:
        - name: id
          description: user id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /admin:
    x-swagger-router-controller: admin
    get:
      description: get the admins' list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAdminsListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    post:
      description: add a new admin to the list
      parameters:
        - name: admin
          description:  admin information
          in: body
          required: true
          schema:
            $ref: "#/definitions/admin"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetAdminResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /admin/{id}:
    x-swagger-router-controller: admin
    get:
      description: get infromation about one admin
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAdminResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    put:
      description: update an existing admin
      # define the parameters
      parameters:
        - name: id
          description: admin id
          type: string
          in: path
          required: true
        - name: admin
          description: admin
          in: body
          required: true
          schema:
            $ref: "#/definitions/admin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAdminResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    delete:
      description: delete a admin
      # define the parameters
      parameters:
        - name: id
          description: admin id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /admin/chart/total-wight:
    x-swagger-router-controller: admin
    get:
      description: get chart of total kgs of the yarn in each production process
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetChart"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /admin/chart/total-sales:
     x-swagger-router-controller: admin
     get:
      description: Pie chart of total sales per yarn type sold
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetChart"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /admin/chart/closed-orders:
    x-swagger-router-controller: admin
    get:
      description:  Line chart of the closed orders per month since 1st january until current month
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetChart"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /order:
    x-swagger-router-controller: order
    get:
      description: get the order list for the logged in user or return the whole orders list if the requester is an admin
      parameters:
        - in: query
          name: status
          type: integer
          description: /order?status=pending
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOrdersListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    post:
      description: add a new order to the cart
      # movie info to be stored
      parameters:
        - name: order
          description:  new order
          in: body
          required: true
          schema:
            $ref: "#/definitions/order"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetOrderResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /order/{id}:
    get:
      description: get infromation about one order for one user
      parameters:
        - in: query
          name: status
          type: integer
          description: /order?status=open
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOrderResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /order/{id}/confirmation:
    get:
      description: get confirmation status for the order to check whether is was confirmed or not
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Confirmation"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    patch:
      description: confirm given order
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: confirmation
          description:  post a confirmation for the order
          in: body
          required: true
          schema:
            $ref: "#/definitions/Confirmation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOrderResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /order/{id}/stampingImg:
    get:
      description: get stamping image if the user select that he wants to add stampling stage to the fabric process table
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/stampingImgResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    post:
      description: post the image
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: stamping image
          in: body
          required: true
          schema:
            $ref: "#/definitions/stampingImg"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralCreatedSuccessfullyResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /order/{id}/invoice/{invoiceID}:
    get:
      description: get the invoice for an order after it is closed 
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: invoiceID
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/invoice"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
  /process-table:
    x-swagger-router-controller: process-table
    get:
      description: get process table
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetTableResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    post:
      description: add a new stage to the process table
      parameters:
        - name: cat
          description:  cat info
          in: body
          required: true
          schema:
            $ref: "#/definitions/stage"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetStageResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /Process-table/{id}:
    get:
      description: get information about stage of the process table details
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetStageResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    put:
      description: update one stage information
      # movie info to be stored
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: stage
          description: stage information
          in: body
          required: true
          schema:
            $ref: "#/definitions/stage"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetStageResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    delete:
      description: delete a stage from the process table
      # define the parameters
      parameters:
  
        - name: id
          description: stage id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /colorCat:
    x-swagger-router-controller: cat
    get:
      description: get available colors categories
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCatsListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    post:
      description: add a new category to the categories list
      # movie info to be stored
      parameters:
        - name: cat
          description:  cat info
          in: body
          required: true
          schema:
            $ref: "#/definitions/cat"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetCatResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /colorCat/{id}:
    get:
      description: get the colorCat details
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCatResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    put:
      description: update colorCat details
      # movie info to be stored
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: colorCat
          description: colorCat
          in: body
          required: true
          schema:
            $ref: "#/definitions/cat"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCatResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    delete:
      description: delete a CATEGORY
      # define the parameters
      parameters:
  
        - name: id
          description: category id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /color:
    get:
      description: get all the colors in one Category
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetColorsListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    post:
      description: add a new cat color to the list
      # movie info to be stored
      parameters:
      
        - name: color
          description:  color info
          in: body
          required: true
          schema:
            $ref: "#/definitions/color"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetColorResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /color/{colorId}:
    x-swagger-router-controller: COLOR
    get:
      description: get infromation about one color
      # define the type of response for Success "200" and Error
      parameters:
        - name: colorId
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetColorResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - UserAuth: []
    put:
      description: update an existing color
      # define the parameters
      parameters:
        - name: colorId
          description: color id
          type: string
          in: path
          required: true
        - name: color
          description: color
          in: body
          required: true
          schema:
            $ref: "#/definitions/color"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetColorResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: delete a color
      # define the parameters
      parameters:
  
        - name: colorId
          description: color id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /yarn/{id}:
  # admin ans suppliers
   get:
      parameters:
        - name: id
          description: yarn id
          type: string
          in: path
          required: true
      description: get details about one yarn in the complany
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetYarnResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
   delete:
      description: delete a yarn type
      # define the parameters
      parameters:
        - name: id
          description:  id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
  /yarn:
    get:
      description: get available yarns in the company
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetYarnsListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
    post:
      description: add a new yarn to the company
      parameters:
        - name: id
          description:  new yarn information
          in: body
          required: true
          schema:
            $ref: "#/definitions/yarn"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetYarnResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []     
  /supplier:
    x-swagger-router-controller: user
    get:
      parameters:
        - in: query
          name: top10
          required: true
          type: boolean
      description: get the suppliers' list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSuppliersListResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
    post:
      description: add a new supplier to the list
      parameters:
        - name: supplier
          description:  supplier information
          in: body
          required: true
          schema:
            $ref: "#/definitions/supplier"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetSupplierResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
  /supplier/{id}:
    x-swagger-router-controller: supplier
    get:
      description: get infromation about one supplier
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSupplierResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
    put:
      description: update an existing supplier
      # define the parameters
      parameters:
        - name: id
          description: supplier id
          type: string
          in: path
          required: true
        - name: supplier
          description: supplier
          in: body
          required: true
          schema:
            $ref: "#/definitions/supplier"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSupplierResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
    delete:
      description: delete a supplier
      # define the parameters
      parameters:
        - name: id
          description: supplier id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
  /supplier/{id}/request:
    get:
      description: get out orders list for one supplier
      parameters:
        - in: query
          name: status
          type: integer
          description: /order?status=open
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSupplierRequest"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
  /supplier/{supplierID}/yarn:
    get:
      description: get available yarns for one supplier
      parameters:
        - name: supplierID
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSupplierYarnsResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
    post:
      description: add a new yarn for the supplier
      parameters:
        - name: supplierID
          type: string
          description:  supplier
          in: path
          required: true
        - name: id
          description:  yarn information
          in: body
          required: true
          schema:
            $ref: "#/definitions/yarn"
      responses:
        "201":
          description: created
          schema:
            $ref: "#/definitions/GetSupplierYarnsResponse"
        "400":
          description: bad request
          schema:
            $ref: "#/definitions/badRequestResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []
  /supplier/{id}/yarn/{yarnID}:
   #supplier
    delete:
      description: delete a supplier yarn type
      # define the parameters
      parameters:
        - name: id
          description: supplier id
          type: string
          in: path
          required: true
        - name: yarnID
          description: yarn id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeletedddSuccessfullyResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/notFoundResponse"
        "500":
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerErrorRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
         - AdminAuth: []
         - SupplierAuth: []     
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  UnauthorizedResponse:
    required:
      - message
    properties:
      message:
        type: string
  badRequestResponse:
    required:
      - message
    properties:
      message:
        type: string
  internalServerErrorRequestResponse:
    required:
      - message
    properties:
      message:
        type: string
  notFoundResponse:
    required:
      - message
    properties:
      message:
        type: string
  GeneralCreatedSuccessfullyResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  GeneralUpdateddSuccessfullyResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  GeneralDeletedddSuccessfullyResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string


  GetUsersListResponse:
    properties:
      user: 
        type: object
        properties:
             _links: 
                type: object
                properties:
                    self:
                      type: object
                      properties:
                        href:
                          type: string
             _embedded:
              type: object
              properties:
                 usersList:
                    type: array
                    items:
                      type: object
                      properties:
                          _links: 
                              type: object
                              properties:
                                  self:
                                    type: object
                                    properties:
                                      href:
                                        type: string
                          _id:
                            type: string
                          username:
                            type: string


                                        
  GetuserResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
          self:
            type: object
            properties:
              href:
                type: string
      _embedded:
        type: object
        properties:
          orders:
            type: array
            items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                  _id: 
                    type: string
          totalSales:
            type: number
      _id:
        type: string
        description: user unique id
      username:
        type: string
        description: user name
      password:
        type: string
        description: user password
      email:
        type: string
        description: user email
      createdAt:
       type: string
      updatedAt:
       type: string
      __v:
       type: number
  user:
    type: object
    properties:
      username:
        type: string
        description: user name
      password:
        type: string
        description: user password
      email:
        type: string
        description: user email
    required:
      - username
      - password
      - email  
  GetAdminsListResponse:
    properties:
      admin: 
        type: object
        properties:
             _links: 
                type: object
                properties:
                    self:
                      type: object
                      properties:
                        href:
                          type: string
             _embedded:
              type: object
              properties:
                 adminsList:
                    type: array
                    items: 
                      type: object
                      properties:
                        _links:
                          type: object
                          properties:
                               self:
                                type: object
                                properties:
                                 href:
                                  type: string
                        id:
                          type: string
                        adminName:
                          type: string
  GetAdminResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
            self: 
              type: string
      _id:
        type: string
        description: admin unique id
      adminName:
        type: string
        description: admin name
      password:
        type: string
        description: admin password
      email:
        type: string
        description: admin email
  admin:
    type: object
    properties:
      adminName:
        type: string
        description: admin name
      password:
        type: string
        description: admin password
      email:
        type: string
        description: admin email
    required:
      - adminName
      - password
      - email         
  GetChart:
     type: object
     properties:
      _links:
        type: object
        properties:
            self: 
              type: string
      _id:
        type: string
      chart: 
        type: string
  order:
          required:
           - stamping
           - dyeing
           - quantity
           - deliveryDate
           - delivaryPlace
  
          type: object
          properties:
            stamping:
              type: string
            stampingImg:
              type: string
            dyeing:
              type: string
            dyeingColor:
              type: string
            quantity:
              type: number
            deliveryDate:
              type: string
            delivaryPlace:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
                zipCode: 
                  type: number
 
            fabricSpec:
              type: array
              items: 
                type: object
                properties:
                    code:
                      type: string
                    NE: 
                      type: number
                    cables: 
                      type: number
                    filament: 
                      type: number
                    TPM: 
                      type: number
                    percintage: 
                      type: number
  GetOrderResponse:
    properties:
      _links:
         type: object
         properties:
              self:
                type: object
                properties:
                    href: 
                      type: string
              owner:
                type: object
                properties:
                    href: 
                      type: string
                    userName:
                      type: string
      _embedded:
         type: object
         properties:
           invoice:
             type: object
             properties:
               self:
                 type: object
                 properties:
                   href: 
                     type: string
           costDetails:
             type: object
             properties:
               self:
                 type: object
                 properties:
                   href:
                     type: string
           confirmation:
             type: object
             properties:
               self:
                 type: object
                 properties:
                   href:
                     type: string
           stampingImg:
             type: object
             properties:
               self:
                 type: object
                 properties:
                   href:
                     type: string

      id:
        type: string
      orderDate:
        type: string
      stamping:
        type: boolean
      dyeing:
        type: boolean
      dyeingColor:
        type: string
      quantity:
        type: number
      deliveryDate:
        type: string
      delivaryPlace:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          country:
            type: string
          zipCode: 
            type: number
      status:
        type: string
      fabricSpec:
        type: array
        items: 
          type: object
          properties:
              code:
                type: string
              NE: 
                type: number
              cables: 
                type: number
              filament: 
                type: number
              TPM: 
                type: number
              percintage: 
                type: number
      confirmed:
        type: boolean
      totalCost:
        type: number
      currency: 
        type: string
  Confirmation:
    properties:
      confirmed:
        type: boolean
  GetOrdersListResponse:
    properties:
      _links:
           type: object
           properties:
              self:
                type: object
                properties:
                    href: 
                      type: string

      _embedded:
        type: object
        properties:
          orders:
            type: array
            items: 
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    self:
                      type: object
                      properties:
                        href:
                          type: string
                    owner:
                      type: object
                      properties:
                          href: 
                            type: string
                          userName:
                            type: string
                id:
                  type: string
                date:
                  type: string
                status:
                  type: string
          totalSales:
            type: number
  stampingImgResponse:
       type: object
       properties:
          _links:
             type: object
             properties:
                  self:
                    type: object
                    properties:
                        href: 
                          type: string
                  order:
                    type: object
                    properties:
                        href: 
                          type: string
          image:
            type: string
  invoice:
      required:
        - invoiceId
        - customerNumber
        - date
        - totalVlue
        - stagesValues
      type: object
      properties:
            _links:
             type: object
             properties:
                  self:
                    type: object
                    properties:
                        href: 
                          type: string
                  owner:
                    type: object
                    properties:
                        href: 
                          type: string
                        userName:
                          type: string
                  order:
                    type: object
                    properties:
                        href: 
                          type: string
                        orderID:
                          type: string
            invoiceId:
              type: number
            customerNumber:
              type: string
            orderID:
              type: string
            date:
              type: string
            totalVlue:
              type: number
            stagesValues:
              type: array
              items:
                type: object
                properties:
                  stage:
                    type: string
                  cost:
                    type: number
  stampingImg:
     type: object
     properties:
      img:
        type: string
     required:
      - img
  stage:
    required:
        - name
        - description
        - order
        - price
        - currency
        - optional
    type: object
    properties:
        name:
          type: string
        description:
          type: string
        order:
          type: number
        price:
          type: number
        currency:
          type: number
        optional:
          type: string
  GetStageResponse:
     type: object
     properties:
      _links:
         type: object
         properties:
           self:
             type: object
             properties:
               href:
                type: string
           process-table:
             type: object
             properties:
               href:
                type: string
      name:
        type: string
      description:
        type: string
      id:
        type: string
      order:
        type: number
      price:
        type: number
      currency:
        type: number
      optional:
        type: string
  GetTableResponse:
     type: object
     properties:
       _links:
           type: object
           properties:
             self:
               type: object
               properties:
                 href:
                  type: string
       _embedded:
          type: object
          properties:
            stages:
              type: array
              items:
                 type: object
                 properties:
                    _links:
                       type: object
                       properties:
                         self:
                           type: object
                           properties:
                             href:
                               type: string
                    stageName: 
                       type: string
  cat:
      required:
        - name
        - cost
        - currency
      type: object
      properties:
        name:
          type: string
        cost:
          type: number
        currency:
          type: string
  GetCatsListResponse:
    properties:
      _links:
           type: object
           properties:
              self:
                type: object
                properties:
                    href: 
                      type: string
      _embedded:
         type: object
         properties:
          cats:
            type: array
            items:
              type: object
              properties:
                    _links:
                       type: object
                       properties:
                          self:
                            type: object
                            properties:
                                href: 
                                  type: string
                    name:
                      type: string
                    id:
                      type: string
  GetCatResponse:
              properties:
                    _links:
                       type: object
                       properties:
                          self:
                            type: object
                            properties:
                                href: 
                                  type: string
                    name:
                      type: string
                    id:
                      type: string
                    cost:
                      type: number
                    currency:	
                      type: string 
                    _embedded: 
                      type: object
                      properties:
                        color:
                         type: array
                         items:
                           type: object
                           properties:
                                _links:
                                   type: object
                                   properties:
                                      self:
                                        type: object
                                        properties:
                                            href: 
                                              type: string
                                color:
                                  type: string
                               
  color:
      required:
        - name
        - hexCode
      type: object
      properties:
        name:
          type: string
        hexCode:
          type: string
          
  GetColorsListResponse:
    properties:
       _links:
           type: object
           properties:
              self:
                type: object
                properties:
                    href: 
                      type: string
 
       _embedded: 
          type: object
          properties:
           color:
            type: array
            items:
              type: object
              properties:
                    _links:
                       type: object
                       properties:
                          self:
                            type: object
                            properties:
                                href: 
                                  type: string
                                category:
                                  type: object
                                  properties:
                                      href: 
                                        type: string
                                      categoryName: 
                                        type: string
                    name:
                      type: string
                    id:
                      type: string           
          
  GetColorResponse:

      type: object
      properties:
        _links:
           type: object
           properties:
              self:
                type: object
                properties:
                    href: 
                      type: string
              category:
                  type: object
                  properties:
                      href: 
                        type: string
                      categoryName: 
                        type: string
        name:
          type: string
        id:
          type: string
        hexCode:
          type: string                     
  GetYarnsListResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
            self: 
              type: object
              properties:
                href:
                 type: string
      _embedded:
          type: object
          properties:
            yarn:
              type: array
              items:
                 type: object
                 properties:
                    _links:
                       type: object
                       properties:
                         self:
                           type: object
                           properties:
                             href:
                               type: string
                    code:
                      type: string
  yarn:
          type: object
          properties:
              code:
                type: string
              NE: 
                type: number
              cables: 
                type: number
              filament: 
                type: number
              TPM: 
                type: number
  GetYarnResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
            self: 
              type: object
              properties:
                href:
                 type: string
            suppliersList:
              type: array
              items:
                type: object
                properties:
                  href:
                   type: string
      code:
        type: string
      NE: 
        type: number
      cables: 
        type: number
      filament: 
        type: number
      TPM: 
        type: number               
  GetSuppliersListResponse:
    required:
      - supplier
    properties:
      supplier: 
        type: object
        properties:
             _links: 
                type: object
                properties:
                    self:
                      type: object
                      properties:
                        href:
                          type: string
             _embedded:
              type: object
              properties:
                 suppliersList:
                    type: array
                    items: 
                      type: object
                      properties:
                        _links:
                          type: object
                          properties:
                               self:
                                  type: string
                        id:
                          type: string
                        supplierName:
                          type: string
                        supplierApi:
                          type: string
                        totalSales:
                          type: number

      
  GetSupplierResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
            self: 
              type: object
              properties:
                href:
                 type: string
            yarnsList:
              type: object
              properties:
                href:
                 type: string
                 description: acces to yarns list to add a new yarn type for example
      _embedded:
        type: object
        properties:
          orders:
            type: array
            items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
          totalSales:
            type: number
             
          yarns:
              type: object
              properties:
                yarnsLink:
                 type: string
                 description: access the yarns list for that user /supplier/ID/yarn
                yarnsList:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                            self:
                              type: object
                              properties:
                                href:
                                  type: string
                                  description: access one yarn from the baseUsl/yarn/yarnID
                      yarnName: 
                        type: string
              
              
                            
      supplierName:
        type: string
        description: supplier name
      password:
        type: string
        description: supplier password
      email:
        type: string
        description: supplier email
      supplierApi:
        type: string
      address:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          country:
            type: string
          zipCode: 
            type: number
      
  supplier:
    type: object
    properties:
      id:
        type: string
        description: supplier unique id
      supplierName:
        type: string
        description: supplier name
      password:
        type: string
        description: supplier password
      email:
        type: string
        description: supplier email
      supplierApi:
        type: string
      address:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          country:
            type: string
          zipCode: 
            type: number
    required:
      - supplierName
      - password
      - email 
      - supplierApi
      - address
  GetSupplierRequest:
    type: object
    properties:
      _links:
          type: object
          properties:
              self: 
                type: object
                properties:
                  href:
                   type: string
              customerOrder:
                type: object
                properties:
                  href:
                   type: string
              yarnType: 
                type: object
                properties:
                  href:
                   type: string
              supplier:
                type: object
                properties:
                  href:
                   type: string
      id: 
       type: string
      orderDate:
       type: string
      orderId:
       type: string
      status:
       type: string
       description: order status if it is delieverd or requeste
      delieverDate:
        type: string
  GetSupplierYarnsResponse:
    type: object
    properties:
      _links:
        type: object
        properties:
            self: 
              type: object
              properties:
                href:
                 type: string
            supplier: 
              type: object
              properties:
                href:
                 type: string
      _embedded:
          type: object
          properties:
            yarn:
              type: array
              items:
                 type: object
                 properties:
                    _links:
                       type: object
                       properties:
                         self:
                           type: object
                           properties:
                             href:
                               type: string
                    code:
                      type: string